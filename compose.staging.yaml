services:
  web:
    build: 
      context: ./app
      dockerfile: Dockerfile
    command: /usr/src/app/scripts/entrypoint.sh
    volumes:
      - static_volume:/usr/src/app/staticfiles
      - media_volume:/usr/src/app/mediafiles
    image: cms-img-prod:latest
    expose:
      - 8000
    env_file:
      - ./.env.staging
    depends_on:
      - db
  db:
    image: postgres:15
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - ./.env.staging.db

  nginx-proxy:
    image: nginx-proxy-prod:latest
    container_name: nginx-proxy
    build: ./nginx-proxy
    restart: always
    ports:
      # - 1337:80
      - 443:443
      - 80:80
    volumes:
    - static_volume:/usr/src/app/staticfiles
    - media_volume:/usr/src/app/mediafiles
    - certs:/etc/nginx/certs
    - html:/usr/share/nginx/html
    - vhost:/etc/nginx/vhost.d
    - /var/run/docker.sock:/tmp/docker.sock:ro
    depends_on:
      - web
  
  acme-companion:
    image: nginxproxy/acme-companion
    env_file:
      - ./.env.staging.proxy-companion
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - certs:/etc/nginx/certs
      - html:/usr/share/nginx/html
      - vhost:/etc/nginx/vhost.d
      - acme:/etc/acme.sh
    depends_on:
      - nginx-proxy

volumes:
  postgres_data:
  static_volume:
  media_volume:
  certs:
  html:
  vhost:
  acme: