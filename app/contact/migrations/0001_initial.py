# Generated by Django 5.0 on 2024-05-19 13:31

import django.db.models.deletion
import modelcluster.fields
import uuid
import wagtail.blocks
import wagtail.contrib.forms.models
import wagtail.fields
import wagtail.images.blocks
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('wagtailcore', '0091_remove_revision_submitted_for_moderation'),
        ('wagtailimages', '0025_alter_image_file_alter_rendition_file'),
    ]

    operations = [
        migrations.CreateModel(
            name='ContactPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('banner_caption', wagtail.fields.StreamField([('BannerCaption', wagtail.blocks.StructBlock([('link_page', wagtail.blocks.PageChooserBlock(required=False)), ('link_url', wagtail.blocks.URLBlock(label='external URL', required=False)), ('title', wagtail.blocks.CharBlock(label='Title', max_length=100, required=False)), ('text', wagtail.blocks.TextBlock(label='Text', max_length=200, required=False)), ('btn_label', wagtail.blocks.CharBlock(help_text='Text to show on button', label='Btn label', max_length=20, required=False))]))], blank=True, null=True)),
                ('content', wagtail.fields.StreamField([('content', wagtail.blocks.StructBlock([('heading', wagtail.blocks.CharBlock(label='Heading', max_length=200, required=False)), ('subheading', wagtail.blocks.TextBlock(label='Sub heading', max_length=400, required=False)), ('content', wagtail.blocks.RichTextBlock())]))], blank=True, null=True)),
                ('tab_content', wagtail.fields.StreamField([('tab_content', wagtail.blocks.StructBlock([('heading', wagtail.blocks.CharBlock(help_text='Main heading of tab section', label='Heading', max_length=200, required=False)), ('content', wagtail.blocks.ListBlock(wagtail.blocks.StructBlock([('title', wagtail.blocks.CharBlock(label='Title', max_length=100, required=False)), ('text', wagtail.blocks.TextBlock(label='Text', max_length=1000, required=False)), ('image', wagtail.images.blocks.ImageChooserBlock(required=False))], required=False), label='Content'))]))], blank=True, null=True)),
                ('image_gallery', wagtail.fields.StreamField([('image_gallery', wagtail.blocks.StructBlock([('link_page', wagtail.blocks.PageChooserBlock(required=False)), ('link_url', wagtail.blocks.URLBlock(label='external URL', required=False)), ('block_width', wagtail.blocks.ChoiceBlock(choices=[('fluid', 'Fluid'), ('container', 'Container')], help_text='Selecting container will add space around the section, Fluid will fit the section to the horizontal edges', required=False)), ('heading', wagtail.blocks.CharBlock(label='Heading', max_length=200, required=False)), ('gallery_mode', wagtail.blocks.ChoiceBlock(choices=[('grid', 'Grid'), ('slider', 'Slider'), ('split', 'Split')], help_text='Choose the layout for the gallery', required=False)), ('content', wagtail.blocks.TextBlock(help_text='Add content for the Split gallery mode', label='Content', required=False)), ('btn_label', wagtail.blocks.CharBlock(help_text='Text to show on the button', label='Label', max_length=20, required=False)), ('images', wagtail.blocks.ListBlock(wagtail.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock(required=False)), ('title', wagtail.blocks.CharBlock(label='Title', max_length=100, required=False)), ('caption', wagtail.blocks.CharBlock(label='Caption', max_length=150, required=False))], required=False)))]))], blank=True, null=True)),
                ('accordion', wagtail.fields.StreamField([('accordion', wagtail.blocks.StructBlock([('heading', wagtail.blocks.CharBlock(help_text='Main Tab Heading', max_length=200, required=False)), ('content', wagtail.blocks.ListBlock(wagtail.blocks.StructBlock([('title', wagtail.blocks.CharBlock(label='Title', max_length=200, required=False)), ('text', wagtail.blocks.TextBlock(label='Text', required=False)), ('image', wagtail.images.blocks.ImageChooserBlock(required=False))], required=False)))]))], blank=True, null=True)),
                ('banner_image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image')),
                ('uploaded_image_collection', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='wagtailcore.collection')),
            ],
            options={
                'verbose_name': 'Contact Page',
                'verbose_name_plural': 'Contact pages',
            },
            bases=(wagtail.contrib.forms.models.FormMixin, 'wagtailcore.page'),
        ),
        migrations.CreateModel(
            name='ContactForm',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
                ('clean_name', models.CharField(blank=True, default='', help_text='Safe name of the form field, the label converted to ascii_snake_case', max_length=255, verbose_name='name')),
                ('label', models.CharField(help_text='The label of the form field', max_length=255, verbose_name='label')),
                ('required', models.BooleanField(default=True, verbose_name='required')),
                ('choices', models.TextField(blank=True, help_text='Comma or new line separated list of choices. Only applicable in checkboxes, radio and dropdown.', verbose_name='choices')),
                ('default_value', models.TextField(blank=True, help_text='Default value. Comma or new line separated values supported for checkboxes.', verbose_name='default value')),
                ('help_text', models.CharField(blank=True, max_length=255, verbose_name='help text')),
                ('field_type', models.CharField(choices=[('singleline', 'Single line text'), ('multiline', 'Multi-line text'), ('email', 'Email'), ('number', 'Number'), ('url', 'URL'), ('checkbox', 'Checkbox'), ('checkboxes', 'Checkboxes'), ('dropdown', 'Drop down'), ('multiselect', 'Multiple select'), ('radio', 'Radio buttons'), ('date', 'Date'), ('datetime', 'Date/time'), ('hidden', 'Hidden field'), ('image', 'Upload Image'), ('document', 'Upload Document')], max_length=16, verbose_name='field type')),
                ('page', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='form_fields', to='contact.contactpage')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='StickyContactLink',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('translation_key', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('language', models.CharField(choices=[('en', 'English'), ('de', 'German')], default='en', help_text='Enter the language code', max_length=5)),
                ('locale', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='wagtailcore.locale')),
                ('page', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='wagtailcore.page')),
            ],
            options={
                'abstract': False,
                'unique_together': {('translation_key', 'locale')},
            },
        ),
    ]
