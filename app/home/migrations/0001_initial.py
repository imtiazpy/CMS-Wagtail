# Generated by Django 5.0 on 2024-05-19 13:31

import django.db.models.deletion
import streams.models
import wagtail.blocks
import wagtail.embeds.blocks
import wagtail.fields
import wagtail.images.blocks
import wagtail.snippets.blocks
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('wagtailcore', '0091_remove_revision_submitted_for_moderation'),
        ('wagtailimages', '0025_alter_image_file_alter_rendition_file'),
    ]

    operations = [
        migrations.CreateModel(
            name='HomePage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('header_carousel', wagtail.fields.StreamField([('carousel', wagtail.blocks.StructBlock([('carousel_items', wagtail.blocks.StreamBlock([('image', wagtail.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock(required=True))], required=False)), ('embed', wagtail.blocks.StructBlock([('video', wagtail.embeds.blocks.EmbedBlock(max_height=697, max_width=1920))], required=False)), ('media', wagtail.blocks.StructBlock([('video', wagtail.snippets.blocks.SnippetChooserBlock(required=False, target_model=streams.models.CarouselVideo))], required=False))]))]))], blank=True, null=True)),
                ('banner_caption', wagtail.fields.StreamField([('banner_caption', wagtail.blocks.StructBlock([('link_page', wagtail.blocks.PageChooserBlock(required=False)), ('link_url', wagtail.blocks.URLBlock(label='external URL', required=False)), ('title', wagtail.blocks.CharBlock(label='Title', max_length=100, required=False)), ('text', wagtail.blocks.TextBlock(label='Text', max_length=200, required=False)), ('btn_label', wagtail.blocks.CharBlock(help_text='Text to show on button', label='Btn label', max_length=20, required=False))]))], blank=True, null=True)),
                ('content', wagtail.fields.StreamField([('content', wagtail.blocks.StructBlock([('heading', wagtail.blocks.CharBlock(label='Heading', max_length=200, required=False)), ('subheading', wagtail.blocks.TextBlock(label='Sub heading', max_length=400, required=False)), ('content', wagtail.blocks.RichTextBlock())])), ('tab_content', wagtail.blocks.StructBlock([('heading', wagtail.blocks.CharBlock(help_text='Main heading of tab section', label='Heading', max_length=200, required=False)), ('content', wagtail.blocks.ListBlock(wagtail.blocks.StructBlock([('title', wagtail.blocks.CharBlock(label='Title', max_length=100, required=False)), ('text', wagtail.blocks.TextBlock(label='Text', max_length=1000, required=False)), ('image', wagtail.images.blocks.ImageChooserBlock(required=False))], required=False), label='Content'))])), ('news_card', wagtail.blocks.StructBlock([('block_width', wagtail.blocks.ChoiceBlock(choices=[('fluid', 'Fluid'), ('container', 'Container')], help_text='Selecting container will add space around the section, Fluid will fit the section to the horizontal edges', required=False)), ('heading', wagtail.blocks.CharBlock(label='Heading', max_length=200, required=False)), ('cards', wagtail.blocks.ListBlock(wagtail.blocks.StructBlock([('page', wagtail.blocks.PageChooserBlock(page_type=['news.News'], required=False))], required=False)))])), ('classic_card', wagtail.blocks.StructBlock([('block_width', wagtail.blocks.ChoiceBlock(choices=[('fluid', 'Fluid'), ('container', 'Container')], help_text='Selecting container will add space around the section, Fluid will fit the section to the horizontal edges', required=False)), ('cards', wagtail.blocks.ListBlock(wagtail.blocks.StructBlock([('link_page', wagtail.blocks.PageChooserBlock(required=False)), ('link_url', wagtail.blocks.URLBlock(label='external URL', required=False)), ('banner_image', wagtail.images.blocks.ImageChooserBlock(required=False)), ('heading', wagtail.blocks.CharBlock(label='Heading', max_length=100, required=False)), ('text', wagtail.blocks.TextBlock(label='Text', max_length=400, required=False))], required=False)))])), ('sliding_card', wagtail.blocks.StructBlock([('block_width', wagtail.blocks.ChoiceBlock(choices=[('fluid', 'Fluid'), ('container', 'Container')], help_text='Selecting container will add space around the section, Fluid will fit the section to the horizontal edges', required=False)), ('body', wagtail.blocks.ListBlock(wagtail.blocks.StructBlock([('link_page', wagtail.blocks.PageChooserBlock(required=False)), ('link_url', wagtail.blocks.URLBlock(label='external URL', required=False)), ('image', wagtail.images.blocks.ImageChooserBlock(required=False)), ('title', wagtail.blocks.CharBlock(label='Title', max_length=200, required=False)), ('content', wagtail.blocks.TextBlock(help_text='Content of the card', required=False))], required=False)))])), ('flex', wagtail.blocks.StructBlock([('link_page', wagtail.blocks.PageChooserBlock(required=False)), ('link_url', wagtail.blocks.URLBlock(label='external URL', required=False)), ('block_width', wagtail.blocks.ChoiceBlock(choices=[('fluid', 'Fluid'), ('container', 'Container')], help_text='Selecting container will add space around the section, Fluid will fit the section to the horizontal edges', required=False)), ('heading', wagtail.blocks.CharBlock(label='Heading', max_length=200, required=False)), ('subheading', wagtail.blocks.TextBlock(label='Subheading', max_length=400, required=False)), ('content', wagtail.blocks.TextBlock(label='Content', max_length=1000, required=False)), ('image', wagtail.images.blocks.ImageChooserBlock(required=False)), ('image_position', wagtail.blocks.ChoiceBlock(choices=[('left', 'Left'), ('right', 'Right')], help_text='Image rendering position, left or right', required=False)), ('content_display_mode', wagtail.blocks.ChoiceBlock(choices=[('normal', 'Normal'), ('overlay', 'Overlay')], help_text='Choose Overlay for showing the content over the image, default:Normal', required=False)), ('btn_label', wagtail.blocks.CharBlock(help_text='Text to show on the button', label='Label', max_length=20, required=False))])), ('blue_section', wagtail.blocks.StructBlock([('link_page', wagtail.blocks.PageChooserBlock(required=False)), ('link_url', wagtail.blocks.URLBlock(label='external URL', required=False)), ('block_width', wagtail.blocks.ChoiceBlock(choices=[('fluid', 'Fluid'), ('container', 'Container')], help_text='Selecting container will add space around the section, Fluid will fit the section to the horizontal edges', required=False)), ('image', wagtail.images.blocks.ImageChooserBlock(required=False)), ('heading', wagtail.blocks.CharBlock(label='Heading', max_length=200, required=False)), ('subheading', wagtail.blocks.TextBlock(label='Subheading', max_length=400, required=False)), ('btn_label', wagtail.blocks.CharBlock(help_text='Text to show on the button', label='Label', max_length=20, required=False))])), ('image_gallery', wagtail.blocks.StructBlock([('link_page', wagtail.blocks.PageChooserBlock(required=False)), ('link_url', wagtail.blocks.URLBlock(label='external URL', required=False)), ('block_width', wagtail.blocks.ChoiceBlock(choices=[('fluid', 'Fluid'), ('container', 'Container')], help_text='Selecting container will add space around the section, Fluid will fit the section to the horizontal edges', required=False)), ('heading', wagtail.blocks.CharBlock(label='Heading', max_length=200, required=False)), ('gallery_mode', wagtail.blocks.ChoiceBlock(choices=[('grid', 'Grid'), ('slider', 'Slider'), ('split', 'Split')], help_text='Choose the layout for the gallery', required=False)), ('content', wagtail.blocks.TextBlock(help_text='Add content for the Split gallery mode', label='Content', required=False)), ('btn_label', wagtail.blocks.CharBlock(help_text='Text to show on the button', label='Label', max_length=20, required=False)), ('images', wagtail.blocks.ListBlock(wagtail.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock(required=False)), ('title', wagtail.blocks.CharBlock(label='Title', max_length=100, required=False)), ('caption', wagtail.blocks.CharBlock(label='Caption', max_length=150, required=False))], required=False)))])), ('accordion', wagtail.blocks.StructBlock([('heading', wagtail.blocks.CharBlock(help_text='Main Tab Heading', max_length=200, required=False)), ('content', wagtail.blocks.ListBlock(wagtail.blocks.StructBlock([('title', wagtail.blocks.CharBlock(label='Title', max_length=200, required=False)), ('text', wagtail.blocks.TextBlock(label='Text', required=False)), ('image', wagtail.images.blocks.ImageChooserBlock(required=False))], required=False)))])), ('random_quote', wagtail.blocks.StructBlock([('heading', wagtail.blocks.CharBlock(help_text='Heading for the quote section', label='Heading', max_length=200, required=False)), ('items', wagtail.blocks.ListBlock(wagtail.blocks.StructBlock([('quote', wagtail.blocks.TextBlock(label='Quote', max_length=1000, required=False)), ('author', wagtail.blocks.CharBlock(label='Author', max_length=100, required=False))], required=False)))])), ('logo_section', wagtail.blocks.StructBlock([('block_width', wagtail.blocks.ChoiceBlock(choices=[('fluid', 'Fluid'), ('container', 'Container')], help_text='Selecting container will add space around the section, Fluid will fit the section to the horizontal edges', required=False)), ('grayscale', wagtail.blocks.BooleanBlock(default=False, help_text='To show the logo in grayscale or black and white', label='Grayscale', required=False)), ('logo_items', wagtail.blocks.ListBlock(wagtail.blocks.StructBlock([('link_page', wagtail.blocks.PageChooserBlock(required=False)), ('link_url', wagtail.blocks.URLBlock(label='external URL', required=False)), ('logo', wagtail.images.blocks.ImageChooserBlock(required=False))], required=False)))]))], blank=True, null=True)),
                ('person_quote', wagtail.fields.StreamField([('person_quote', wagtail.blocks.StructBlock([('link_page', wagtail.blocks.PageChooserBlock(required=False)), ('link_url', wagtail.blocks.URLBlock(label='external URL', required=False)), ('quote', wagtail.blocks.TextBlock(label='Quote', max_length=1000, required=False)), ('author_photo', wagtail.images.blocks.ImageChooserBlock(required=False)), ('author_name', wagtail.blocks.CharBlock(label='Author name', max_length=100, required=False)), ('author_speciality', wagtail.blocks.CharBlock(label='Author specialty', max_length=100, required=False)), ('contact', wagtail.blocks.CharBlock(label='Contact', max_length=20, required=False)), ('btn_label', wagtail.blocks.CharBlock(help_text='Text to show on button', max_length=20, required=False))]))], blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Home page',
                'verbose_name_plural': 'Home pages',
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='UniversalPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('banner_caption', wagtail.fields.StreamField([('banner_caption', wagtail.blocks.StructBlock([('link_page', wagtail.blocks.PageChooserBlock(required=False)), ('link_url', wagtail.blocks.URLBlock(label='external URL', required=False)), ('title', wagtail.blocks.CharBlock(label='Title', max_length=100, required=False)), ('text', wagtail.blocks.TextBlock(label='Text', max_length=200, required=False)), ('btn_label', wagtail.blocks.CharBlock(help_text='Text to show on button', label='Btn label', max_length=20, required=False))]))], blank=True, null=True)),
                ('content', wagtail.fields.StreamField([('content_block', wagtail.blocks.StructBlock([('heading', wagtail.blocks.CharBlock(label='Heading', max_length=200, required=False)), ('subheading', wagtail.blocks.TextBlock(label='Sub heading', max_length=400, required=False)), ('content', wagtail.blocks.RichTextBlock())])), ('news_card', wagtail.blocks.StructBlock([('block_width', wagtail.blocks.ChoiceBlock(choices=[('fluid', 'Fluid'), ('container', 'Container')], help_text='Selecting container will add space around the section, Fluid will fit the section to the horizontal edges', required=False)), ('heading', wagtail.blocks.CharBlock(label='Heading', max_length=200, required=False)), ('cards', wagtail.blocks.ListBlock(wagtail.blocks.StructBlock([('page', wagtail.blocks.PageChooserBlock(page_type=['news.News'], required=False))], required=False)))])), ('flex', wagtail.blocks.StructBlock([('link_page', wagtail.blocks.PageChooserBlock(required=False)), ('link_url', wagtail.blocks.URLBlock(label='external URL', required=False)), ('block_width', wagtail.blocks.ChoiceBlock(choices=[('fluid', 'Fluid'), ('container', 'Container')], help_text='Selecting container will add space around the section, Fluid will fit the section to the horizontal edges', required=False)), ('heading', wagtail.blocks.CharBlock(label='Heading', max_length=200, required=False)), ('subheading', wagtail.blocks.TextBlock(label='Subheading', max_length=400, required=False)), ('content', wagtail.blocks.TextBlock(label='Content', max_length=1000, required=False)), ('image', wagtail.images.blocks.ImageChooserBlock(required=False)), ('image_position', wagtail.blocks.ChoiceBlock(choices=[('left', 'Left'), ('right', 'Right')], help_text='Image rendering position, left or right', required=False)), ('content_display_mode', wagtail.blocks.ChoiceBlock(choices=[('normal', 'Normal'), ('overlay', 'Overlay')], help_text='Choose Overlay for showing the content over the image, default:Normal', required=False)), ('btn_label', wagtail.blocks.CharBlock(help_text='Text to show on the button', label='Label', max_length=20, required=False))])), ('blue_section', wagtail.blocks.StructBlock([('link_page', wagtail.blocks.PageChooserBlock(required=False)), ('link_url', wagtail.blocks.URLBlock(label='external URL', required=False)), ('block_width', wagtail.blocks.ChoiceBlock(choices=[('fluid', 'Fluid'), ('container', 'Container')], help_text='Selecting container will add space around the section, Fluid will fit the section to the horizontal edges', required=False)), ('image', wagtail.images.blocks.ImageChooserBlock(required=False)), ('heading', wagtail.blocks.CharBlock(label='Heading', max_length=200, required=False)), ('subheading', wagtail.blocks.TextBlock(label='Subheading', max_length=400, required=False)), ('btn_label', wagtail.blocks.CharBlock(help_text='Text to show on the button', label='Label', max_length=20, required=False))])), ('tab_content', wagtail.blocks.StructBlock([('heading', wagtail.blocks.CharBlock(help_text='Main heading of tab section', label='Heading', max_length=200, required=False)), ('content', wagtail.blocks.ListBlock(wagtail.blocks.StructBlock([('title', wagtail.blocks.CharBlock(label='Title', max_length=100, required=False)), ('text', wagtail.blocks.TextBlock(label='Text', max_length=1000, required=False)), ('image', wagtail.images.blocks.ImageChooserBlock(required=False))], required=False), label='Content'))])), ('image_gallery', wagtail.blocks.StructBlock([('link_page', wagtail.blocks.PageChooserBlock(required=False)), ('link_url', wagtail.blocks.URLBlock(label='external URL', required=False)), ('block_width', wagtail.blocks.ChoiceBlock(choices=[('fluid', 'Fluid'), ('container', 'Container')], help_text='Selecting container will add space around the section, Fluid will fit the section to the horizontal edges', required=False)), ('heading', wagtail.blocks.CharBlock(label='Heading', max_length=200, required=False)), ('gallery_mode', wagtail.blocks.ChoiceBlock(choices=[('grid', 'Grid'), ('slider', 'Slider'), ('split', 'Split')], help_text='Choose the layout for the gallery', required=False)), ('content', wagtail.blocks.TextBlock(help_text='Add content for the Split gallery mode', label='Content', required=False)), ('btn_label', wagtail.blocks.CharBlock(help_text='Text to show on the button', label='Label', max_length=20, required=False)), ('images', wagtail.blocks.ListBlock(wagtail.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock(required=False)), ('title', wagtail.blocks.CharBlock(label='Title', max_length=100, required=False)), ('caption', wagtail.blocks.CharBlock(label='Caption', max_length=150, required=False))], required=False)))])), ('accordion', wagtail.blocks.StructBlock([('heading', wagtail.blocks.CharBlock(help_text='Main Tab Heading', max_length=200, required=False)), ('content', wagtail.blocks.ListBlock(wagtail.blocks.StructBlock([('title', wagtail.blocks.CharBlock(label='Title', max_length=200, required=False)), ('text', wagtail.blocks.TextBlock(label='Text', required=False)), ('image', wagtail.images.blocks.ImageChooserBlock(required=False))], required=False)))])), ('sliding_card', wagtail.blocks.StructBlock([('block_width', wagtail.blocks.ChoiceBlock(choices=[('fluid', 'Fluid'), ('container', 'Container')], help_text='Selecting container will add space around the section, Fluid will fit the section to the horizontal edges', required=False)), ('body', wagtail.blocks.ListBlock(wagtail.blocks.StructBlock([('link_page', wagtail.blocks.PageChooserBlock(required=False)), ('link_url', wagtail.blocks.URLBlock(label='external URL', required=False)), ('image', wagtail.images.blocks.ImageChooserBlock(required=False)), ('title', wagtail.blocks.CharBlock(label='Title', max_length=200, required=False)), ('content', wagtail.blocks.TextBlock(help_text='Content of the card', required=False))], required=False)))])), ('random_quote', wagtail.blocks.StructBlock([('heading', wagtail.blocks.CharBlock(help_text='Heading for the quote section', label='Heading', max_length=200, required=False)), ('items', wagtail.blocks.ListBlock(wagtail.blocks.StructBlock([('quote', wagtail.blocks.TextBlock(label='Quote', max_length=1000, required=False)), ('author', wagtail.blocks.CharBlock(label='Author', max_length=100, required=False))], required=False)))])), ('logo_section', wagtail.blocks.StructBlock([('block_width', wagtail.blocks.ChoiceBlock(choices=[('fluid', 'Fluid'), ('container', 'Container')], help_text='Selecting container will add space around the section, Fluid will fit the section to the horizontal edges', required=False)), ('grayscale', wagtail.blocks.BooleanBlock(default=False, help_text='To show the logo in grayscale or black and white', label='Grayscale', required=False)), ('logo_items', wagtail.blocks.ListBlock(wagtail.blocks.StructBlock([('link_page', wagtail.blocks.PageChooserBlock(required=False)), ('link_url', wagtail.blocks.URLBlock(label='external URL', required=False)), ('logo', wagtail.images.blocks.ImageChooserBlock(required=False))], required=False)))]))], blank=True, null=True)),
                ('person_quote', wagtail.fields.StreamField([('person_quote', wagtail.blocks.StructBlock([('link_page', wagtail.blocks.PageChooserBlock(required=False)), ('link_url', wagtail.blocks.URLBlock(label='external URL', required=False)), ('quote', wagtail.blocks.TextBlock(label='Quote', max_length=1000, required=False)), ('author_photo', wagtail.images.blocks.ImageChooserBlock(required=False)), ('author_name', wagtail.blocks.CharBlock(label='Author name', max_length=100, required=False)), ('author_speciality', wagtail.blocks.CharBlock(label='Author specialty', max_length=100, required=False)), ('contact', wagtail.blocks.CharBlock(label='Contact', max_length=20, required=False)), ('btn_label', wagtail.blocks.CharBlock(help_text='Text to show on button', max_length=20, required=False))]))], blank=True, null=True)),
                ('banner_image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image')),
            ],
            options={
                'verbose_name': 'Universal page',
                'verbose_name_plural': 'Universal pages',
            },
            bases=('wagtailcore.page',),
        ),
    ]
